{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/servicios/mensajes.service\";\nimport * as i2 from \"src/app/servicios/peticion.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegistroComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"label\", 7);\n    i0.ɵɵtext(3, \"Cedula\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.cedula = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"label\", 9);\n    i0.ɵɵtext(7, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.nombre = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 11);\n    i0.ɵɵtext(11, \"Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.apellido = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 13);\n    i0.ɵɵtext(15, \"Edad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.edad = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Direccion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.direccion = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 17);\n    i0.ɵɵtext(23, \"Telefono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.telefono = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 6)(26, \"label\", 19);\n    i0.ɵɵtext(27, \"Estado civil\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.telefono = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 6)(30, \"label\", 21);\n    i0.ɵɵtext(31, \"Correo elect\\u00F3nico\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_div_9_Template_input_ngModelChange_32_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.email = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"small\", 23);\n    i0.ɵɵtext(34, \"No comparata informaci\\u00F3n personal con nadie.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"div\", 6)(36, \"label\", 24);\n    i0.ɵɵtext(37, \"Contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 26);\n    i0.ɵɵelement(40, \"input\", 27);\n    i0.ɵɵelementStart(41, \"label\", 28);\n    i0.ɵɵtext(42, \"Check me out\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 0)(44, \"div\", 1)(45, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function RegistroComponent_div_9_Template_button_click_45_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.Registrar());\n    });\n    i0.ɵɵtext(46, \" Registrar \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cedula);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.nombre);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.apellido);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.edad);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.direccion);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.telefono);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.telefono);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.email);\n  }\n}\nfunction RegistroComponent_table_16_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 33);\n    i0.ɵɵtext(2, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r13.cedula);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r13.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r13.apellido);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r13.edad);\n  }\n}\nfunction RegistroComponent_table_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 29)(1, \"thead\", 30)(2, \"tr\")(3, \"th\", 31);\n    i0.ɵɵtext(4, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 31);\n    i0.ɵɵtext(6, \"Cedula\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 31);\n    i0.ɵɵtext(8, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 31);\n    i0.ɵɵtext(10, \"Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 31);\n    i0.ɵɵtext(12, \"Edad\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, RegistroComponent_table_16_tr_14_Template, 11, 4, \"tr\", 32);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ListaDatos);\n  }\n}\n//--------------------------------------------------------------------\n//CLASE: RegistroComponent\n//--------------------------------------------------------------------\nexport class RegistroComponent {\n  /*\r\n    ORDEN DE CARGA DE ELEMENTOS EN UNA CLASE:\r\n      1.) constructor()              --> Espacio donde carga los elementos necesarios\r\n      2.) ngOnChanges()              --> Esta constantemente cargando los cambios\r\n      3.) ngOnInit()                 --> Se encarga de hacerlas peticiones para cargar los elementos en el html\r\n      4.) ngOnCheck()                -->\r\n            -ngAfterContentInit      -->\r\n            -ngAfterContentChecked   -->\r\n            -ngAfterViewInit         --> Después de que se cargue la vista\r\n            -ngAfterViewChecked      -->\r\n      5.) ngOnDestroy                --> Cuando cambia de una vista a otra\r\n  */\n  //Es el tercer elemento que se carga, luego del constructor\n  //y el ngOnChanges. (lo pusimos aqui para ver el nivel de carga)\n  ngOnInit() {\n    console.log(\"Cargando el OnInit\");\n    this.ListarUsuarios();\n  }\n  //--------------------------------------------------------------------\n  //CONSTRUCTOR DE LA CLASE\n  //--------------------------------------------------------------------\n  /*\r\n  El constructor es lo primero que se carga en Angular.\r\n      Definimos una variable msj de tipo MensajeService\r\n  para podeer hacer uso de este servicio, sus variables\r\n  y métodos; msj debe ser público para usar la variable\r\n  en el html, de lo contrario, es mejor manejarla privada\r\n  para uso local (solamente en el TypeScript).\r\n      Las variables de tipo \"MensajeService\" y \"PeticionService\", sirven para\r\n  indicarle al constructor que se van a usar estos servicios\r\n  */\n  constructor(msj, PeticionDeLlegada) {\n    this.msj = msj;\n    this.PeticionDeLlegada = PeticionDeLlegada;\n    //--------------------------------------------------------------------\n    //VARIABLES DE LA CLASE\n    //--------------------------------------------------------------------\n    this.cedula = \"\";\n    this.nombre = \"\";\n    this.apellido = \"\";\n    this.email = \"\";\n    this.edad = 0;\n    this.direccion = \"\";\n    this.telefono = \"\";\n    this.estadocivil = \"\";\n    this.password = \"\";\n    this.mostrar = true;\n    this.mostrar_tabla = false;\n    this.ListaDatos = [];\n    //VARIABLES DE TIPO OBJETO\n    this.persona1 = {\n      nombre: \"Enmanuel\",\n      apellido: \"Berruecos\",\n      edad: 25,\n      habilidades: [\"programar\", \"Streamer\", 1]\n    };\n    console.log(\"Yo tengo más poder\");\n  }\n  //--------------------------------------------------------------------\n  // FUNCIONES DE LA CLASE RegistroComponent\n  //--------------------------------------------------------------------\n  //Mostrar u Ocultar el registro\n  MostrarOcultar() {\n    this.mostrar = !this.mostrar;\n  }\n  //Mostrar u Ocultar el registro\n  MostrarTabla() {\n    this.mostrar_tabla = !this.mostrar_tabla;\n  }\n  //C.R.U.D\n  //Guardar la información\n  Registrar() {\n    let post = {\n      host: this.PeticionDeLlegada.url_local,\n      path: \"/Cliente/Guradar\",\n      payload: {\n        cedula: this.cedula,\n        nombre: this.nombre,\n        apellido: this.apellido,\n        edad: this.edad,\n        direccion: this.direccion,\n        telefono: this.telefono,\n        estadocivil: this.estadocivil,\n        email: this.email,\n        password: this.password\n      }\n    };\n    //console.log(this.nombre);\n    //this.msj.datos.push({ mensaje: \"push al array\" });\n    //this.msj.miMsj = \"Usuario Guardado!\";\n    //Hacemos uso de la función que almacena el tipo de mensaje\n    this.msj.Cargar(\"success\", \"Usuario Registrado!\", 5000);\n    //this.msj.Cargar( \"danger\", \"Usuario no Registrado!\", 6000);\n    //Lo último que se hace (limpiar datos)\n    this.nombre = \"\";\n    this.email = \"\";\n    this.password = \"\";\n  }\n  //Funcion para conectarse al Backend y listar lso usuarios\n  ListarUsuarios() {\n    let post = {\n      host: this.PeticionDeLlegada.url_local,\n      path: \"/Cliente/ListarUsuarios\",\n      payload: {}\n    };\n    //Petición de tipo Post\n    this.PeticionDeLlegada.Post(post.host + post.path, post.payload).then(respuesta => {\n      console.log(respuesta);\n      this.ListaDatos = respuesta.data;\n    });\n  }\n} //FIN DE LA CLASE: RegistrosComponent\nRegistroComponent.ɵfac = function RegistroComponent_Factory(t) {\n  return new (t || RegistroComponent)(i0.ɵɵdirectiveInject(i1.MensajesService), i0.ɵɵdirectiveInject(i2.PeticionService));\n};\nRegistroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistroComponent,\n  selectors: [[\"app-registro\"]],\n  decls: 17,\n  vars: 8,\n  consts: [[1, \"lista-botones\"], [1, \"boton-func\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"registroForm\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [\"id\", \"registroForm\"], [1, \"form-group\"], [\"for\", \"cc\"], [\"type\", \"text\", \"id\", \"cc\", \"placeholder\", \"Ej. 11223344\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"apellido\"], [\"type\", \"text\", \"id\", \"apellido\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"edad\"], [\"type\", \"number\", \"id\", \"edad\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dir\"], [\"type\", \"text\", \"id\", \"dir\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"tel\"], [\"type\", \"text\", \"id\", \"tel\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"estado\"], [\"type\", \"text\", \"id\", \"estado\", \"placeholder\", \"ej. soltero,casado, divorciado, etc.\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"pass\"], [\"type\", \"password\", \"id\", \"pass\", \"placeholder\", \"Enter secret password\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"Check\", 1, \"form-check-input\"], [\"for\", \"Check\", 1, \"form-check-label\"], [1, \"table\"], [1, \"thead-light\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"]],\n  template: function RegistroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"registro works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function RegistroComponent_Template_button_click_4_listener() {\n        return ctx.MostrarOcultar();\n      });\n      i0.ɵɵtext(5, \" Mostrar/Ocultar \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function RegistroComponent_Template_button_click_7_listener() {\n        return ctx.MostrarTabla();\n      });\n      i0.ɵɵtext(8, \" Listar Usuarios \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(9, RegistroComponent_div_9_Template, 47, 8, \"div\", 3);\n      i0.ɵɵelementStart(10, \"div\");\n      i0.ɵɵtext(11);\n      i0.ɵɵpipe(12, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\");\n      i0.ɵɵtext(14);\n      i0.ɵɵpipe(15, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, RegistroComponent_table_16_Template, 15, 1, \"table\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.mostrar);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 4, ctx.msj));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 6, ctx.msj.datos));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.mostrar_tabla);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel, i3.JsonPipe],\n  styles: [\"#registroForm[_ngcontent-%COMP%] {\\r\\n    width: 400px;\\r\\n    margin: 00px auto;\\r\\n    padding: 20px;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0px 10px 34px -13px rgba(0, 0, 0, 0.74);\\r\\n}\\r\\n\\r\\n.lista-botones[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.boton-func[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.boton-func[_ngcontent-%COMP%]:not(:first-child){\\r\\n    margin-left: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvTWlzQ29tcG9uZW50ZXMvcmVnaXN0cm8vcmVnaXN0cm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsbURBQW1EO0FBQ3ZEOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuI3JlZ2lzdHJvRm9ybSB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDAwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMTBweCAzNHB4IC0xM3B4IHJnYmEoMCwgMCwgMCwgMC43NCk7XHJcbn1cclxuXHJcbi5saXN0YS1ib3RvbmVze1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLmJvdG9uLWZ1bmN7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4uYm90b24tZnVuYzpub3QoOmZpcnN0LWNoaWxkKXtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","RegistroComponent","ngOnInit","console","log","ListarUsuarios","constructor","msj","PeticionDeLlegada","nombre","apellido","edad","habilidades","MostrarOcultar","mostrar","MostrarTabla","mostrar_tabla","Registrar","post","host","url_local","path","payload","cedula","direccion","telefono","estadocivil","email","password","Cargar","Post","then","respuesta","ListaDatos","data","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\7. Educacion\\BIT con la IBERO\\BOOTCAMP - Desarrollo web full-stack\\Ejercicios\\Angular-1-y-2\\frontendAngular\\src\\app\\MisComponentes\\registro\\registro.component.html","E:\\7. Educacion\\BIT con la IBERO\\BOOTCAMP - Desarrollo web full-stack\\Ejercicios\\Angular-1-y-2\\frontendAngular\\src\\app\\MisComponentes\\registro\\registro.component.ts"],"sourcesContent":["<p>registro works!</p>\n\n<!-- Lista de botones -->\n<div class=\"lista-botones\">\n  <!-- Botón Mostrar/Ocultar -->\n  <div class=\"boton-func\">\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"MostrarOcultar()\">\n      Mostrar/Ocultar\n    </button>\n  </div>\n\n  <!-- Botón Mostrar tabla -->\n  <div class=\"boton-func\">\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"MostrarTabla()\">\n      Listar Usuarios\n    </button>\n  </div>\n</div>\n<!-- Fin de la lista de botones -->\n\n<div id=\"registroForm\" *ngIf=\"mostrar\">\n  <div class=\"form-group\">\n    <label for=\"cc\">Cedula</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"cc\"\n      placeholder=\"Ej. 11223344\"\n      [(ngModel)]=\"cedula\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"name\">Nombre</label>\n    <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"nombre\" />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"apellido\">Apellido</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"apellido\"\n      [(ngModel)]=\"apellido\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"edad\">Edad</label>\n    <input type=\"number\" class=\"form-control\" id=\"edad\" [(ngModel)]=\"edad\" />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"dir\">Direccion</label>\n    <input type=\"text\" class=\"form-control\" id=\"dir\" [(ngModel)]=\"direccion\" />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"tel\">Telefono</label>\n    <input type=\"text\" class=\"form-control\" id=\"tel\" [(ngModel)]=\"telefono\" />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"estado\">Estado civil</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"estado\"\n      placeholder=\"ej. soltero,casado, divorciado, etc.\"\n      [(ngModel)]=\"telefono\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Correo electónico</label>\n    <input\n      type=\"email\"\n      class=\"form-control\"\n      id=\"exampleInputEmail1\"\n      aria-describedby=\"emailHelp\"\n      placeholder=\"Enter email\"\n      [(ngModel)]=\"email\"\n    />\n    <small id=\"emailHelp\" class=\"form-text text-muted\"\n      >No comparata información personal con nadie.</small\n    >\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"pass\">Contraseña</label>\n    <input\n      type=\"password\"\n      class=\"form-control\"\n      id=\"pass\"\n      placeholder=\"Enter secret password\"\n    />\n  </div>\n\n  <div class=\"form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"Check\" />\n    <label class=\"form-check-label\" for=\"Check\">Check me out</label>\n  </div>\n\n  <!-- Lista de botones -->\n  <div class=\"lista-botones\">\n    <!-- Botón Mostrar/Ocultar -->\n    <div class=\"boton-func\">\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"Registrar()\">\n        Registrar\n      </button>\n    </div>\n  </div>\n  <!-- Fin de la lista de botones -->\n</div>\n\n<!-- de esta forma convertimos una variable en texto para leer en el\n    html (con los \"|\")\n-->\n<div>{{ msj | json }}</div>\n\n<!-- de esta forma se ve solo la informacion que contiene la variable\n-->\n<div>{{ msj.datos | json }}</div>\n\n<!-- TABLA PARA MOSTRAR DATOS -->\n<table class=\"table\" *ngIf=\"mostrar_tabla\">\n  <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Cedula</th>\n      <th scope=\"col\">Nombre</th>\n      <th scope=\"col\">Apellido</th>\n      <th scope=\"col\">Edad</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of ListaDatos\">\n      <th scope=\"row\">1</th>\n      <td>{{ item.cedula }}</td>\n      <td>{{ item.nombre }}</td>\n      <td>{{ item.apellido }}</td>\n      <td>{{ item.edad }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';  //Se importa el OnInit\nimport { Persona } from 'src/app/interfaces/persona';\nimport { MensajesService } from 'src/app/servicios/mensajes.service';\nimport { PeticionService } from 'src/app/servicios/peticion.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\n  \n  \n  \n   //--------------------------------------------------------------------\n  //CLASE: RegistroComponent\n  //--------------------------------------------------------------------\nexport class RegistroComponent implements OnInit {\n\n\n   //--------------------------------------------------------------------\n  //VARIABLES DE LA CLASE\n  //--------------------------------------------------------------------\n\n  cedula: string = \"\";\n  nombre: string = \"\";\n  apellido: string = \"\";\n  email: string = \"\";\n  edad: number = 0;\n  direccion: string = \"\";\n  telefono: string = \"\";\n  estadocivil: string = \"\";\n  password: string = \"\";\n\n  mostrar: boolean = true;\n  mostrar_tabla: boolean = false;\n  ListaDatos: any[] = [];\n\n  //VARIABLES DE TIPO OBJETO\n  persona1: Persona = {\n    nombre: \"Enmanuel\",\n    apellido: \"Berruecos\",\n    edad: 25,\n    habilidades: [\"programar\", \"Streamer\", 1],\n  }\n\n\n\n\n  /*\n    ORDEN DE CARGA DE ELEMENTOS EN UNA CLASE:\n      1.) constructor()              --> Espacio donde carga los elementos necesarios\n      2.) ngOnChanges()              --> Esta constantemente cargando los cambios\n      3.) ngOnInit()                 --> Se encarga de hacerlas peticiones para cargar los elementos en el html\n      4.) ngOnCheck()                --> \n            -ngAfterContentInit      -->\n            -ngAfterContentChecked   -->\n            -ngAfterViewInit         --> Después de que se cargue la vista\n            -ngAfterViewChecked      -->\n      5.) ngOnDestroy                --> Cuando cambia de una vista a otra\n  */\n\n\n  //Es el tercer elemento que se carga, luego del constructor\n  //y el ngOnChanges. (lo pusimos aqui para ver el nivel de carga)\n  ngOnInit(): void {\n    console.log(\"Cargando el OnInit\");\n    this.ListarUsuarios();\n  }\n\n\n  \n\n\n  //--------------------------------------------------------------------\n  //CONSTRUCTOR DE LA CLASE\n  //--------------------------------------------------------------------\n\n  /*\n  El constructor es lo primero que se carga en Angular.\n\n  Definimos una variable msj de tipo MensajeService\n  para podeer hacer uso de este servicio, sus variables\n  y métodos; msj debe ser público para usar la variable\n  en el html, de lo contrario, es mejor manejarla privada\n  para uso local (solamente en el TypeScript).\n\n  Las variables de tipo \"MensajeService\" y \"PeticionService\", sirven para\n  indicarle al constructor que se van a usar estos servicios\n  */\n\n  constructor(public msj:MensajesService, private PeticionDeLlegada:PeticionService){ \n    console.log(\"Yo tengo más poder\");\n  }\n\n\n\n\n\n  //--------------------------------------------------------------------\n  // FUNCIONES DE LA CLASE RegistroComponent\n  //--------------------------------------------------------------------\n\n\n\n    //Mostrar u Ocultar el registro\n  MostrarOcultar() {\n    this.mostrar = !this.mostrar;\n  }\n\n  //Mostrar u Ocultar el registro\n  MostrarTabla() {\n    this.mostrar_tabla = !this.mostrar_tabla;\n  }\n\n\n\n\n\n\n\n  //C.R.U.D\n\n  //Guardar la información\n  Registrar() {\n\n    let post = {\n    host: this.PeticionDeLlegada.url_local,\n    path: \"/Cliente/Guradar\",\n      payload: {\n        cedula      : this.cedula,\n        nombre      : this.nombre,\n        apellido    : this.apellido,\n        edad        : this.edad,\n        direccion   : this.direccion,\n        telefono    : this.telefono,\n        estadocivil : this.estadocivil,\n        email       : this.email,\n        password    : this.password,\n      }\n    }\n\n\n\n\n\n\n    //console.log(this.nombre);\n    //this.msj.datos.push({ mensaje: \"push al array\" });\n    //this.msj.miMsj = \"Usuario Guardado!\";\n    \n    //Hacemos uso de la función que almacena el tipo de mensaje\n    this.msj.Cargar(\"success\", \"Usuario Registrado!\", 5000);\n    //this.msj.Cargar( \"danger\", \"Usuario no Registrado!\", 6000);\n\n\n    //Lo último que se hace (limpiar datos)\n    this.nombre = \"\";\n    this.email = \"\";\n    this.password = \"\";\n  }\n  \n\n  //Funcion para conectarse al Backend y listar lso usuarios\n  ListarUsuarios() {\n    let post = {\n      host: this.PeticionDeLlegada.url_local,\n      path: \"/Cliente/ListarUsuarios\",\n      payload:{}\n    }\n\n    //Petición de tipo Post\n    this.PeticionDeLlegada.Post(post.host + post.path, post.payload).then(\n      (respuesta: any) => {\n        console.log(respuesta);\n        this.ListaDatos = respuesta.data;\n      })\n\n  }\n\n  \n\n} //FIN DE LA CLASE: RegistrosComponent\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}